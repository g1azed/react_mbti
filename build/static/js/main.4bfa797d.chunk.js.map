{"version":3,"sources":["styles/styledComponents.js","components/Home.js","utils/questionContent.js","components/game/Question.js","utils/resultContent.js","components/game/Result.js","components/Game.js","App.js","index.js"],"names":["Button","styled","button","Title","div","homeContainer","textAlign","Home","props","style","onClick","this","goTest","React","Component","questionContent","number","question","answer1","answer2","type","Question","count","selectAnswer","resultContent","description","character","imageSrc","Result","state","result","content","points","e","s","t","j","forEach","rc","setState","src","width","height","margin","goFirst","gameContainer","Game","btnNum","container","display","justifyContent","alignItems","App","begin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bfa797d.chunk.js","sourcesContent":["/*\r\n재활용 할 수 있는 버튼 만들어서 갖다쓰기\r\n+\r\n홈 화면에 필요한 스타일\r\n*/\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const Button = styled.button`\r\n    width: 160px; height: 40px;\r\n    font-size: 16px;\r\n    border-radius: 20px; border: none;\r\n    color: white;\r\n    background-color: teal;\r\n    margin: 20px; \r\n    &:active{\r\n        outline: none;\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\n// 제목이 적절한 위치에 배치되도록 최소높이 지정한!\r\nexport const Title = styled.div`\r\n    min-height: 150px;\r\n\r\n`","/* \r\n  시작 화면, 사용자에게 시작을 유도하고\r\n  퀴즈에 대해 소개하는 화면\r\n*/\r\nimport React from 'react'\r\nimport { Button, Title} from '../styles/styledComponents'\r\n\r\nconst homeContainer = {\r\n  textAlign:\"center\"\r\n}\r\n\r\nclass Home extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n    return <div style={homeContainer} >\r\n        <Title><h1>당신에게 어울리는 디즈니 공주는? </h1></Title>\r\n\r\n        <Button onClick={this.props.goTest}>시작하기</Button>\r\n        \r\n        <p>MADE BY SUJ</p>\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default Home;","/* \r\n12개의 질문에 대한 데이터를 보관하는 배열!\r\n*/\r\nexport const questionContent = [\r\n  {\r\n    number: 1,\r\n    question: \" 내가 위험에 빠진 상황일때, 무슨 짓을 하더라도 상황을 벗어나간다. \",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"e\"\r\n  },\r\n  {\r\n    number: 2,\r\n    question: \" 새로운 사람과 만나는 것은 항상 재미있는 일이다. \",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"e\"\r\n  },\r\n  {\r\n    number: 3,\r\n    question: \" 일기나 다이어리 쓰는 것은 귀찮은 일이다. \",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"e\"\r\n  },{\r\n    number: 4,\r\n    question: \"샤워할때 망상을 자주 하는 편이다\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"s\"\r\n  },{\r\n    number: 5,\r\n    question: \"모르는 길로는 잘 가지 않는다\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"s\"\r\n  },{\r\n    number: 6,\r\n    question: \"사후세계는 없다\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"s\"\r\n  },{\r\n    number: 7,\r\n    question: \"지인이 시험에 떨어져서 슬퍼하는 상황에는 조언을 해주는것이 맞다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"t\"\r\n  },{\r\n    number: 8,\r\n    question: \"나는 애정표현이 심한 편이다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"t\"\r\n  },{\r\n    number: 9,\r\n    question: \"과정보다는 결과가 더 중요하다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"t\"\r\n  },{\r\n    number: 10,\r\n    question: \"여행계획을 세세히 짜는편이다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"j\"\r\n  },{\r\n    number:11,\r\n    question: \"물건들을 치워 놓는 편이다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"j\"\r\n  },{\r\n    number:12,\r\n    question: \"개인생활보단 조직생활이 더 좋다.\",\r\n    answer1 : \"O\",\r\n    answer2 : \"X\",\r\n    type: \"j\"\r\n  },\r\n]","/* \r\n  사용자에게 질문을 던지는 컴포넌트 \r\n*/\r\nimport React from 'react'\r\nimport { Button,\r\nTitle } from '../../styles/styledComponents'\r\n\r\n// 문제가 모여있는 배열을 여기에 가져와서 쓴다!\r\nimport {questionContent} from '../../utils/questionContent'\r\n\r\nclass Question extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return <div>\r\n      <Title>\r\n        <h3>{this.props.count + 1}</h3>\r\n        <h2>{ questionContent[this.props.count].question }</h2>\r\n      </Title>\r\n      <Button onClick={() => this.props.selectAnswer(1, questionContent[this.props.count].type )}>\r\n        {questionContent[this.props.count].answer1}\r\n      </Button><br />\r\n      <Button onClick={() => this.props.selectAnswer(2, questionContent[this.props.count].type)}>\r\n        {questionContent[this.props.count].answer2}\r\n      </Button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Question;","/*\r\n 16가지 결과에 대한 정보가 모여있는 배열\r\n*/\r\n\r\nexport const resultContent = [\r\n    {\r\n        type: \"ESFP\",\r\n        description: `여기저기 다니면서 여러 친구들과 어울리는 에리얼처럼 ESFP는 사교적이고 활동적입니다. \r\n                    어떤 상황이든 잘 적응하며 때로는 조금 수다스럽고 진지함이 없지만 어떤 공동체에서나 밝고 재미있는 \r\n                    분위기 조성역할을 잘합니다. 충동적 행동이 많아 골치아픈 경우가 많고 쉽게 넘어가려고 하는 경향이 있습니다  `,\r\n        character: \" 에리얼 \",\r\n        imageSrc: \"img/에리얼.png\"\r\n    },{\r\n        type: \"ENFP\",\r\n        description: `따듯하고 활기가 넘치는 라푼젤처럼 ENFP는 항상 새로운 가능성을 찾고 시도합니다. 문제해결이 빠르고 \r\n                    관심있는 일은 무엇이든지 수행해내는 능력과 열성이 있습니다. 본인이 하고싶은일이 있다면 여러가지 일을 벌려놓습니다.\r\n                    사회적인 틀과 통념에 박히는 것을 지루해합니다.`,\r\n        character: \" 라푼젤 \",\r\n        imageSrc: \"img/라푼젤.png\"\r\n    },{\r\n        type: \"ESTP\",\r\n        description: `모험을 떠다는 메리다같이 오감으로 느낄 수 있는 삶에 모든 것을 즐기는 유형인 ESTP. 추상적인 아이디어나 개념에 대해서는\r\n                        흥미가 없으며 현실적이고 실용적인면에서 분석적입니다. 연장이나 재료를 들고 다루는데에 능숙하며 어디서든 적응을 잘하고\r\n                        친구와 어울리는 것을 좋아합니다.`,\r\n        character: \" 메리다 \",\r\n        imageSrc: \"img/메리다.png\"\r\n    },{\r\n        type: \"ENTP\",\r\n        description: ` 노르트담의 꼽추를 가장 편견 없이 바라보는 에스메랄다는 자존감이 높고 자기애가 강합니다.\r\n                      자신의 가치관이 우선 생각되어 불합리한 전통이나 규범등을 싫어합니다. 자기주장이 강하지만 정당한 비판에는 수용합니다. \r\n                      리더의 자질이 있어 자신의 아이디어로 남을 이끌어 가는걸 좋아하지만 지나친 간섭은 하지않습니다. `,\r\n        character: \"에스메랄다 \",\r\n        imageSrc: \"img/에스메랄다.png\"\r\n    },{\r\n        type: \"ESFJ\",\r\n        description: `타고난 협력자로서 동료애가 많고 친절한 안나처럼 ESFJ는 사람 관련 문제에는 \r\n                    냉철한 평가를 하지 못하는 경향이 있습니다. 타인의 감정을 배려하는 편이며 타인과 함께 지내는 것을\r\n                    행복으로 여깁니다. 하지만 타인도 자신과 같은 마음을 가졌으면 하는 마음이 커 주는만큼 받지 못하면 상처를 받습니다. `,\r\n        character: \"안나 \",\r\n        imageSrc: \"img/안나.png\"\r\n    },{\r\n        type: \"ENFJ\",\r\n        description: `따뜻하고 적극적이며 책임감이 강하고 사교성이 풍부하고 동정심이 많은 ENFJ,\r\n                    이타적이고 인화를 중요시하며 참을성이 많습니다. \r\n                     다른 사람들의 생각이나 의견에 진지한 관심을 가지고 공동선을 위하여 다른 사람의 의견에 대체로 동의합니다.\r\n                    미래의 가능성을 추구하는 계획을 제시하고 집단을 이끌어가는 능력이 있습니다.`,\r\n        character: \"포카혼타스 \",\r\n        imageSrc: \"img/포카혼타스.png\"\r\n    },{\r\n        type: \"ESTJ\",\r\n        description: `리더쉽이 있으므로 경제력이 가장 좋은 유형 중 하나인 ESTJ,  \r\n                        겉보기에 철저하고 엄격해 보일 수는 있지만 본인 주변에 있는 \r\n                        사람들에게 의리와 배려를 보여주기도 합니다. \r\n                        스스로 빡세게 일을 하며, 현실적이면서 커다란 도전을 좋아하는 유형입니다.`,\r\n        character: \"티아나\",\r\n        imageSrc: \"img/티아나.png\"\r\n    },{\r\n        type: \"ENTJ\",\r\n        description: `사교활동에 매우 적극적이며 본인이 직접 모임을 주도하고 적극적으로 대화의 주도권을 이끌어 나가는 힘이 있는 성격입니다. \r\n                    이것저것 논리적으로 계산을 하는 것이 능숙하고 자기관리능력이 뛰어나 한마디로 유능한 성격의 대표주자입니다. \r\n                    그러나 불건강한 경우, 소시오패스처럼 되는 케이스도 있어 조심해야 합니다.`,\r\n        character: \"키다 \",\r\n        imageSrc: \"img/키다.png\"\r\n    },{\r\n        type: \"INFJ\",\r\n        description: `모든 것을 얼음으로 만들 수 있는 엘사처럼 창의력이 좋은 INFJ! \r\n                        겉차속따 스타일로 내성적이라 겉모습과 속마음이 다릅니다. 평소에는 온화하지만 상처를\r\n                        크게 받을 경우에는 미련없이 인간관계를 정리합니다. 외로움을 잘 타면서도 고독을 즐기는 엘사네요. `,\r\n        character: \"엘사\",\r\n        imageSrc: \"img/엘사.png\"\r\n    },{\r\n        type: \"INTJ\",\r\n        description: \" 용의주도한 전략가/ 벨처럼  \",\r\n        character: \"벨\",\r\n        imageSrc: \"img/벨.png\"\r\n    },{\r\n        type: \"ISFJ\",\r\n        description: `ISFJ 유형 성격의 소유자는 조용하고 차분하며 따뜻하고 친근합니다. \r\n                        책임감과 인내력 또한 매우 강하고 본인의 친한 친구나 가족에게 애정이 가득합니다.\r\n                        이들은 언제나 진솔하려 노력하고 가볍지 않기 때문에 관계를 맺기에 가장 믿음직스러운 유형입니다.\r\n                        실제적이고 꼼꼼하게 계획적이며 협조적으로 일을 처리합니다.\r\n                        완벽한 결과물을 도출하지 못할 경우나 이상과 달리 게을렀을 시 자신에게서 극심한 괴리감을 느껴 상당한 스트레스를 받습니다.\r\n        `,\r\n        character: \"신데렐라 \",\r\n        imageSrc: \"img/신데렐라.png\"\r\n    },{\r\n        type: \"ISTJ\",\r\n        description: `실제 사실에 대하여 정확하고 체계적으로 기억하며 일 처리에 있어서도 신중하고 책임감이 있는 ISTJ, \r\n                    집중력이 강한 현실 감각을 지녔고, 문제를 해결하는데 과거의 경험을 잘 적용하며, \r\n                    반복되는 일상적인 일에 대한 인내력이 강하다. 정확성과 조직력을 발휘하는 분야의 일을 선호한다`,\r\n        character: \"뮬란 \",\r\n        imageSrc: \"img/뮬란.png\"\r\n    },{\r\n        type: \"ISTP\",\r\n        description:`필요 이상으로 자신을 발휘하지 않으며, 일과 관계되지 않는 이상 어떤 상황이나 인간관계에 \r\n                    직접 뛰어들지 않습니다.과묵하며 손재주가 있는 전형적인 장인이나 제조 업자 스타일입니다.\r\n                    신체적 능력이 뛰어나 운동에 재능을 보이는 사람도 많습니다. 민첩하게 상황을 파악해 일을 수행합니다.`,\r\n        character: \"메가라 \",\r\n        imageSrc: \"img/메가라.png\"\r\n    },{\r\n        type: \"ISFP\",\r\n        description: `호기심이 많아 사과를 먹고마는 백설공주, INFP 호기심 많은 예술가 입니다.\r\n                    말없이 다정하고 온화하며 사람들에게 친절하고 상대방을 잘 알게 될 때까지 내면의 모습이 잘 보이지 않습니다.. \r\n                    사람간의 화합을 중요하게 생각하며 의견 충돌을 회피하는 성향으로 인해 타인과의 갈등이 심화되었을 경우 문제를\r\n                    해결하려고 하기보다 상대방과의 관계를 끊을 수 있습니다.\r\n                    이는 인간관계에서 큰 스트레스를 받는 ISFP의 특성 중 하나입니다..`,\r\n        character: \"백설공주 \",\r\n        imageSrc: \"img/백설공주.png\"\r\n    },{\r\n        type: \"INFP\",\r\n        description: `공상적이며, 인간관계에서 타인을 직접적으로 지배하려는 성향이 없고 뒤에서 \r\n                    사회적 약자의 편인 INFP.\r\n                     이상주의적인 면모가 강한데다 가장 감정적인 유형이어서 본인의 가치관을 위해서는 때로 물불 안 가리고 달려들어 \r\n                    싸우는 모습을 보이기도 하며, 불건강하다면 본인 스스로가 정해 놓은 가치관의 노예로 살며 싸우는 경우도 생깁니다. \r\n                    하지만 내향성 I가 더욱 강한 일부 INFP들의 경우 좀처럼 불호 취향에 대해서 겉으로 드러내는 일은 없으며, \r\n                    대신 뒤에서 철저하게 본인이 원치 않는 사항에 대해서 비폭력 불복종을 하는 행동을 취하는 경우가 많습니다.`,\r\n                    character: \"오로라 \",\r\n        imageSrc: \"img/오로라.png\"\r\n    },{\r\n        type: \"INTP\",\r\n        description: `가끔은 매우 추상적이고 비현실적으로 생각하는 경향이 있는 INTP.\r\n                    복잡한 문제를 해결하고 답을 찾는데 집중력을 발휘하지만 막상 그 해결책을 실제 현실에 적용하는 것에는 관심이 없습니다.\r\n                    또 주어진 계획을 그대로 수행하기보다는 즉흥적 활동을 통하여 자기 역량을 효과적으로 발휘하는 편입니다.\r\n                    다시 말해 계획을 철저하게 짜놨다 한들 곧 다시 즉흥적으로 행동할 가능성이 매우 높은 유형입니다.\r\n                    이들에게는 상세한 계획을 늘여놓기보다는 즉흥을 통제할 수 있을 정도만의 수칙이나 방향 몇 개만 설정해두는 것이 오히려 효과적입니다.`,\r\n        character: \" 자스민  \",\r\n        imageSrc: \"img/자스민.png\"\r\n    }\r\n]","/* \r\n질문을 끝내고 결과를 산출하여 보여주는 컴포넌트 \r\n*/\r\nimport React from 'react'\r\nimport {Button, Title } from '../../styles/styledComponents'\r\n\r\n// 결과내용 들어있는 배열 가져다 놓기\r\nimport {resultContent} from '../../utils/resultContent'\r\n\r\n\r\n\r\nclass Result extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    // result : 성향 파악 후 알려주기 위한 상태값\r\n    // content: 배열에서 결과 하나만 쏙빼서 저장할 상태값 \r\n    this.state = { result: \"\", content: {} }\r\n  }\r\n\r\n  // 넘어온 속성들을 가지고 성향 결론 짓기!\r\n  componentDidMount(){\r\n    const { e,s,t,j} = this.props.points\r\n    let result = \"\"  // 계산결과 누산할 임시변수\r\n    result += e > 0 ? \"E\" : \"I\"\r\n    result += s > 0 ? \"S\" : \"N\"\r\n    result += t > 0 ? \"T\" : \"F\"\r\n    result += j > 0 ? \"J\" : \"P\"\r\n\r\n    let content; //성향에 해당하는 결과 객체 하나만 임시 저장할 변수\r\n    resultContent.forEach( rc => { // forEach(콜백함수) : 요소의 수만큼 콜백함수 호출하는 메소드 \r\n      if(rc.type == result){ // map : 배열만들고싶으면 ,,, forEach : 콜백함수 만들고싶으면 이거\r\n        content = rc; // 일치하는 성향의 객체를 임시 저장\r\n      }\r\n    })\r\n    this.setState({ result: result , content: content })\r\n  }\r\n\r\n  render(){\r\n    const { content } = this.state // 콘텐츠만 뽑는 구조분해\r\n    return <div>\r\n      <Title>\r\n        <h2> 나와 맞는 공주는 {content.character} </h2>\r\n        <img src= {content.imageSrc} style={{width: 300, height: 500}} />\r\n        <h1> {this.state.result} </h1>\r\n        <p style={{width:'60%', margin:'0 auto'}}> {content.description} </p>\r\n      </Title>\r\n      <Button onClick={this.props.goFirst}> 다시하기 </Button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Result;","/* \r\n퀴즈를 진행하고, 결과를 보여주는 \r\n나름의 게임(?) 부분을 담당하는 컴포넌트\r\n*/\r\nimport React from 'react'\r\nimport Question from './game/Question'\r\nimport Result from './game/Result'\r\n\r\n// 총 질문 수\r\nconst NUMBER_OF_QUESTION = 12; \r\nconst gameContainer = { textAlign: 'center' }\r\n\r\nclass Game extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    // count : 대답을 들은 질문 수 \r\n    // e, s, t, j : 각 타입의 점수를 누산할 상태\r\n    // 1번을 누르면 양수, 2번을 누르면 음수\r\n    this.state = {\r\n      count: 0,\r\n      e:0, s:0, t:0, j:0\r\n    }\r\n  }\r\n\r\n  // 질문 하나 대답하면 넘어가기 + 점수 계산하기\r\n  // btnNum: 1번눌렀냐(+), 2번눌렀냐 (-)\r\n  // type: e,s,t, j 중 뭐에 대한 문제였냐\r\n  selectAnswer = (btnNum,type ) => {\r\n    if(btnNum == 1){\r\n      if(type =='e'){ this.setState({ e:this.state.e + 1, count: this.state.count + 1}) }\r\n      if(type =='s'){ this.setState({ s:this.state.e + 1, count: this.state.count + 1}) }\r\n      if(type =='t'){ this.setState({ t:this.state.e + 1, count: this.state.count + 1}) }\r\n      if(type =='j'){ this.setState({ j:this.state.e + 1, count: this.state.count + 1}) }\r\n    }else{\r\n      if(type =='e'){ this.setState({ e:this.state.e - 1, count: this.state.count + 1}) }\r\n      if(type =='s'){ this.setState({ s:this.state.e - 1, count: this.state.count + 1}) }\r\n      if(type =='t'){ this.setState({ t:this.state.e - 1, count: this.state.count + 1}) }\r\n      if(type =='j'){ this.setState({ j:this.state.e - 1, count: this.state.count + 1}) }\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    // Result 에다가 e,s,t,j 를 넘겨주기 위해 구조분해를 한다\r\n    const {e,s,t,j} = this.state\r\n\r\n    return <div style={gameContainer}>\r\n      { \r\n        this.state.count == NUMBER_OF_QUESTION ?\r\n        <Result goFirst={this.props.goFirst} points={{e,s,t,j}} /> : \r\n        <Question count={this.state.count}\r\n        selectAnswer={this.selectAnswer} />\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Game;","/*\n  App.js\n\n  루트 컴포넌트로써, 시작화면, 질문화면, 결과화면을 모두\n  품어주는 역할!\n\n*/\nimport React from 'react'\nimport Home from './components/Home'\nimport Game from './components/Game'\n\nconst container = {\n  height: '100vh',\n  display: \"flex\", justifyContent: \"center\", \n  alignItems: \"center\",\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    // 사용자가 시작했는지 여부를 나타내는 상태\n    this.state = {\n      begin: false \n    }\n  }\n\n  // 이 컴포넌트의 상태 begin을 바꿀 수 있는 메소드\n  goTest = () => { this.setState({ begin : true }) }\n  goFirst = () => { this.setState({ begin : false }) }\n\n  render(){\n    return <div style={container}>\n      {\n        this.state.begin ? <Game goFirst={this.goFirst} />:\n        <Home goTest={this.goTest} />\n      }\n    </div>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}